import os
import requests

items = [
  "1001_class_t1_bootsofspeed",
  "1004_class_t1_faeriecharm",
  "1006_tank_t1_rejuvenationbead",
  "1011_class_t2_giantsbelt",
  "1018_base_t1_cloakagility",
  "1026_mage_t1_blastingwand",
  "1027_base_t1_saphirecrystal",
  "1028_base_t1_rubycrystal",
  "1029_base_t1_clotharmor",
  "1031_base_t2_chainvest",
  "1033_base_t1_magicmantle",
  "1035_alll_t1_emberknife",
  "1036_class_t1_longsword",
  "1037_class_t1_pickaxe",
  "1038_marksman_t1_bfsword",
  "1039_all_t1_hailblade",
  "1040_obsidianedge",
  "1042_base_t1_dagger",
  "1043_base_t2_recurvebow",
  "1052_mage_t2_amptome",
  "1053_fighter_t2_vampiricscepter",
  "1054_tank_t1_doransshield",
  "1055_marksman_t1_doransblade",
  "1056_mage_t1_doransring",
  "1057_tank_t2_negatroncloak",
  "1058_mage_t1_largerod",
  "1082_mage_t1_darkseal",
  "1083_marksman_t1_cull",
  "1101_jungle_t1_scorchclawpup",
  "1102_jungle_t1_gustwalkerhatchling",
  "1103_jungle_t1_mosstomperseedling",
  "1103_testitem2",
  "1504_turretshielder",
  "1505_turretzapper",
  "1507_tournament_suddendeath",
  "1508_antitowersocks",
  "1509_gusto",
  "1510_phreakishgusto",
  "1511_supermecharmor",
  "1512_supermechpowerfield",
  "2003_class_t1_healthpotion",
  "2010_class_t1_totalbiscuitofeverlastingwill",
  "2015_marksman_t2_kirkcheisshard",
  "2031_class_t1_refillablepotion",
  "2033_class_t1_corruptingpotion",
  "2051_aram_t1_guardianshorn",
  "2052_poro_snack",
  "2055_class_t1_controlward",
  "2065_tank_t4_shurelyasbattlesong",
  "2138_class_elixirofiron",
  "2139_class_t1_elixirofsorcery",
  "2140_class_t0_elixirofwrath",
  "2319_sackofgold",
  "2403_minion_dematerializer",
  "2419_mage_t1_stopwatch",
  "2422_class_t1_slightlymagicalboots",
  "2424_mage_t1_brokenstopwatch",
  "3001_support_lunari",
  "3003_mage_t3_archangelstaff",
  "3004_marksman_t3_manamune",
  "3006_class_t2_berserkersgreaves",
  "3009_class_t2_bootsofswiftness",
  "3011_enchanter_t3_chemtechfumigator",
  "3020_class_t2_sorcerersshoes",
  "3024_tank_t2_glacialshroud",
  "3026_fighter_t3_guardianangel",
  "3031_marksman_t3_infinityedge",
  "3033_marksman_t3_mortalreminder",
  "3035_marksman_t2_lastwhisper",
  "3036_marksman_t3_dominikregards",
  "3041_mage_t2_mejaissoulstealer",
  "3042_marksman_t3_muramana",
  "3042_netherrift_armor",
  "3044_fighter_t2_phage",
  "3046_marksman_t3_phantomdancer",
  "3047_class_t2_ninjatabi",
  "3048_mage_t3_seraphsembrace",
  "3050_enchanter_t3_zekesconvergence",
  "3051_fighter_t2_axeofavarosa",
  "3053_steraks_gage",
  "3056_ohmwrecker",
  "3057_fighter_t2_sheen",
  "3065_tank_t3_spiritvisage",
  "3066_tank_t3_wingedmoonplate",
  "3067_tank_t1_kindlegem",
  "3068_tank_t4_sunfireaegis",
  "3070_all_t1_tearofthegoddess",
  "3071_fighter_t3_blackcleaver",
  "3072_fighter_t3_bloodthirster",
  "3074_fighter_t3_ravenoushydra",
  "3075_tank_t3_thornmail",
  "3076_tank_t2_bramblevest",
  "3077_fighter_t2_tiamat",
  "3078_fighter_t4_trinityforce",
  "3082_tank_t2_wardensmail",
  "3083_tank_t3_warmogs",
  "3084_tank_t4_heartsteel",
  "3085_marksman_t3_runaans",
  "3086_fighter_t2_zeal",
  "3089_mage_t3_deathcap",
  "3091_fighter_t3_witsend",
  "3094_marksman_t3_rapidfirehandcannon",
  "3095_windblade",
  "3100_mage_t3_lichbane",
  "3102_mage_t3_bansheesveil",
  "3105_tank_t2_aegisofthelegion",
  "3107_enchanter_t3_redemption.pie_c_12_23",
  "3108_mage_t2_fiendishcodex",
  "3109_tank_t3_knightsvow",
  "3110_tank_t3_frozenheart",
  "3111_class_t2_mercurystreads",
  "3112_aram_t1_guardiansorb",
  "3113_mage_t2_aetherwisp",
  "3114_mage_t2_forbiddenidol",
  "3115_mage_t3_nashorstooth",
  "3116_mage_t3_rylajscrystalscepter",
  "3117_class_t2_bootsofmobility",
  "3119_wintersapproach",
  "3121_fimbulwinter",
  "3123_fighter_t2_executionerscalling",
  "3124_marksman_t3_guinsoosrageblade",
  "3133_fighter_t2_caulfieldswarhammer",
  "3134_assassin_t2_serrateddirk",
  "3135_mage_t3_voidstaff",
  "3139_marksman_t3_mercurialscimitar",
  "3140_marksman_t2_quicksilversash",
  "3142_assassin_t3_youmuusghostblade.pie_c_12_23",
  "3143_tank_t3_randuinsomen.pie_c_12_23",
  "3145_mage_t2_hextechalternator",
  "3152_mage_t4_hextechrocketbelt.pie_c_12_23",
  "3153_fighter_t3_bladeoftheruinedking",
  "3155_fighter_t2_hexdrinker",
  "3156_fighter_t3_mawofmalmortius",
  "3157_mage_t3_zhonyashourglass.pie_c_12_23",
  "3158_class_t2_ionianbootsoflucidity",
  "3161_fighter_t3_spearofshojin",
  "3165_mage_t3_morellonomicon",
  "3177_aram_t1_guardiansblade",
  "3177_aram_t1_guardianshammer",
  "3179_assassin_t3_umbralglaive",
  "3181_hullbreaker",
  "3190_enchanter_t4_locketofironsolari.pie_c_12_23",
  "3191_battlemage_t2_seekersarmguard",
  "3193_tank_t3_gargoylestoneplate",
  "3211_tank_t2_spectrescowl",
  "3222_enchanter_t3_mikaelsblessing",
  "3340_class_t1_wardingtotem",
  "3363_class_t1_farsightalteration",
  "3364_class_t1_oracleslens",
  "34",
  "3504_enchanter_t3_ardentcenser",
  "3508_marksman_t3_essencereaver",
  "3513_voideye",
  "3599_kalistapassiveitem",
  "3600_champ_t0_blackspear",
  "3742_tank_t3_deadmansplate",
  "3744_enchanter_t3_staffofflowingwater",
  "3748_fighter_t3_titanichydra",
  "3801_tank_t2_crystallinebracer",
  "3802_mage_tier2_lostchapter",
  "3803_mage_t2_catalystofaeons",
  "3814_assassin_t3_edgeofnight",
  "3850_mage_t1_spellthiefsedge",
  "3851_mage_t2_frostfang",
  "3853_mage_t3_shardoftrueice",
  "3854_tank_t1_petriciteshoulderguard",
  "3855_tank_t2_runesteelspaulders",
  "3857_tank_t3_pauldronsofwhiterock",
  "3858_tank_t1_relicshield",
  "3859_tank_t2_targonsbucker",
  "3860_tank_t3_bulwarkofthemountain",
  "3862_marksman_t1_spectralsickle",
  "3863_marksman_t2_harrowingcrescent",
  "3864_marksman_t3_blackmistscythe",
  "3901_champ_t0_fireatwillcircle",
  "3902_champ_t0_deathsdaughtercircle",
  "3903_champ_t0_raisemoralecircle",
  "3916_mage_t2_oblivionorb",
  "4005_enchanter_t4_imperialmandate",
  "4401_tank_t3_forceofnature",
  "4403_goldenspatula",
  "4628_mage_t3_horizonfocus",
  "4629_mage_t3_cosmicdrive",
  "4630_mage_t2_voidcrystal",
  "4632_tank_t2_verdantbarrier",
  "4633_mage_t4_riftmaker",
  "4635_mage_t2_leechingleer",
  "4636_mage_t4_nightharvester",
  "4637_mage_t3_demonicembrace",
  "4638_enchanter_t3_watchfulsightstone",
  "4641_enchanter_t2_stirringsightstone",
  "4642_enchanter_t2_bandleglassmirror",
  "4643_enchanter_t3_vigilantsightstone",
  "4644_crown",
  "4645_shadowflame",
  "6029_fighter_t2_ironspikewhip",
  "6035_fighter_t3_silvermeredawn",
  "6333_fighter_t3_deathsdance",
  "6609_fighter_t3_chempunkchainsword",
  "6617_enchanter_t4_moonstonerenewer",
  "6630_fighter_t4_goredrinker.pie_c_12_23",
  "6631_fighter_t4_stridebreaker.pie_c_12_23",
  "6632_fighter_t4_divinedevourer",
  "6653_mage_t4_liandrysanguish",
  "6655_mage_t4_ludenstempest",
  "6656_mage_t4_everfrost.pie_c_12_23",
  "6657_mage_t4_rodofages",
  "6660_tank_t2_bamiscinder",
  "6662_tank_t3_iceborngauntlet",
  "6664_tank_t4_acceleratedchemtank.pie_c_12_23",
  "6665_tank_t4_jakshotheprotean",
  "6667_tank_t4_radiantvirtue",
  "6670_marksman_t2_noonquiver",
  "6671_marksman_t4_galeforce.pie_c_12_23",
  "6672_marksman_t4_behemothslayer",
  "6673_marksman_t4_crimsonshieldbow",
  "6675_marksman_t3_navoriquickblades",
  "6676_marksman_t3_thecollector",
  "6677_marksman_t2_rageknife",
  "6691_assassin_t4_duskbladeofdraktharr",
  "6692_assassin_t4_eclipse",
  "6693_assassin_t4_prowlersclaw.pie_c_12_23",
  "6694_assasin_t3_seryldasgrudge",
  "6695_assassin_t3_serpentsfang",
  "6696_axiomarc",
  "8001_tank_t3_anathemaschains",
  "8020_tank_t3_abyssalmask"
]

base_url = 'https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/assets/items/icons2d/'

folder_path = "./images"
if not os.path.exists(folder_path):
    os.makedirs(folder_path)

# Loop over the list of items
for item in items:
    # Construct the complete URL for the image
    image_url = base_url + item + ".png"

    # Make an HTTP request to retrieve the image content
    response = requests.get(image_url)
    image_content = response.content

    # Create the new name for the image
    new_name = item[:4] + ".png"

    # Save the image in the folder
    image_path = os.path.join(folder_path, new_name)
    with open(image_path, "wb") as f:
        f.write(image_content)


